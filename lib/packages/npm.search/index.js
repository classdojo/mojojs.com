// Generated by CoffeeScript 1.6.3
var NPMSearch, flatstack, request, sift,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

flatstack = require("flatstack");

request = require("request");

sift = require("sift");

NPMSearch = (function() {
  /*
  */

  function NPMSearch() {
    this.all = __bind(this.all, this);
    this.load = __bind(this.load, this);
    this._callstack = flatstack();
    this.load();
    setInterval(this.load, 1000 * 60 * 10);
  }

  /*
  */


  NPMSearch.prototype.load = function() {
    var _this = this;
    return this._callstack.push(function(next) {
      var req;
      console.log("loading Mojo modules");
      return req = request.get({
        url: "http://registry.npmjs.org/-/all",
        json: true
      }, function(err, response, body) {
        var module, moduleName, modules;
        modules = [];
        for (moduleName in body) {
          module = body[moduleName];
          if (typeof module !== "object") {
            continue;
          }
          modules.push(body[moduleName]);
        }
        this._modules = modules.filter(function(module) {
          return ~(typeof module.indexOf === "function" ? module.indexOf("mojo-plugin") : void 0);
        });
        console.log("loaded %d mojo modules", this._modules);
        return next();
      });
    });
  };

  /*
  */


  NPMSearch.prototype.search = function(query, next) {
    var _this = this;
    return this._callstack.push(function() {
      return next(null, sift(query, _this._modules));
    });
  };

  /*
  */


  NPMSearch.prototype.all = function(next) {
    var _this = this;
    return this._callstack.push(function() {
      return next(null, _this._modules);
    });
  };

  return NPMSearch;

})();

exports.load = function() {
  return new NPMSearch();
};

