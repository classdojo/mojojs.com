{
  "name": "paperclip-component",
  "version": "0.3.0",
  "description": "paperclip-view ==============",
  "main": "./lib/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "mojo-plugin",
    "paperclip"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/classdojo/paperclip-view.git"
  },
  "author": "",
  "license": "BSD",
  "readmeFilename": "README.md",
  "gitHead": "15f04f9f9da324917f116da384b786ba0009c1cf",
  "dependencies": {
    "type-component": "0.0.1",
    "bindable": "0.5.x",
    "paperclip": "0.4.x",
    "traverse": "0.6.6",
    "janitorjs": "0.0.4"
  },
  "devDependencies": {
    "coffee-script": "~1.6.3"
  },
  "readme": "Paperclip-components allows you to break up your paperclip views into separate files, and re-use them in other parts \nof your application. This idea was derrived from [Ember Components](http://emberjs.com/api/classes/Ember.Component.html),\nand [Angular Directives](http://docs.angularjs.org/guide/directive).\n\n## Requirements\n\n- [bindable.js](https://github.com/classdojo/bindable.js) - needed for registering components\n- [NPM](http://nodejs.org), or [Bower](http://bower.io) - used to install `paperclip-compoennt`\n- [paperclip](https://github.com/classdojo/paperclip.js)\n\n\n## Installation\n\n- Node: `npm install paperclip-component`\n- Browser: `bower install paperclip-component`\n\n## Usage\n\nYou'll first need to add `paperclip-component` as a plugin:\n\n```javascript\nvar pc   = require(\"paperclip\"),\npcc      = require(\"paperclip-component\"),\nbindable = require(\"bindable\");\n\n//where global components live.\nvar components = new bindable.Object();\n\n//plugin paperclip-components, and point to the components dictionary\npc.use(pcc(components));\n```\n\nAfter you have that setup, you can start registering components. Here's one specific to a `node.js` application:\n\n```javascript\ncomponents.set(\"mainLayout\", require(\"./mainLayout\"));\n```\n\nmainLayout.js:\n\n```javascript\nvar mojo = require(\"mojojs\"),\nstructr  = require(\"structr\"),\npc       = require(\"paperclip\")\n\nvar MainLayoutView = structr(mojo.View, {\n  paper: pc.load(__dirname + \"/mainLayout.pc\")\n});\n\nmodule.exports = MainLayoutView;\n```\n\nmainLayout.pc:\n\n```html\n<html>\n  <head>\n  </head>\n  <body>\n    {{ html: sections.body }}\n  </body>\n</html>\n```\n\nAfter you've defined your component, you can use it in any template. Here's how you might use `mainLayout` in a `.pc` file:\n\nhello.pc:\n\n```html\n{{#mainLayout}}\n  {{#sections: \"body\" }}\n    Hello World!\n  {{/}}\n{{/}}\n```\n\nThe rendered output of `hello.pc` would be:\n\n```html\n<html>\n  <head>\n  </head>\n  <body>\n    Hello World!\n  </body>\n</html>\n```\n\n\n\n\n\n\n",
  "bugs": {
    "url": "https://github.com/classdojo/paperclip-view/issues"
  },
  "homepage": "https://github.com/classdojo/paperclip-view",
  "_id": "paperclip-component@0.3.0",
  "_shasum": "72276698e136770ae4399cf4c0577324c68e094c",
  "_from": "http://registry.npmjs.org/paperclip-component/-/paperclip-component-0.3.0.tgz",
  "_resolved": "http://registry.npmjs.org/paperclip-component/-/paperclip-component-0.3.0.tgz"
}
